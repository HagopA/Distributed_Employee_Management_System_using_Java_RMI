
package client.USimport;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CenterServerInterface", targetNamespace = "http://server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CenterServerInterface {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRecordCounts", targetNamespace = "http://server/", className = "client.USimport.GetRecordCounts")
    @ResponseWrapper(localName = "getRecordCountsResponse", targetNamespace = "http://server/", className = "client.USimport.GetRecordCountsResponse")
    @Action(input = "http://server/CenterServerInterface/getRecordCountsRequest", output = "http://server/CenterServerInterface/getRecordCountsResponse")
    public String getRecordCounts(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "transferRecords", targetNamespace = "http://server/", className = "client.USimport.TransferRecords")
    @ResponseWrapper(localName = "transferRecordsResponse", targetNamespace = "http://server/", className = "client.USimport.TransferRecordsResponse")
    @Action(input = "http://server/CenterServerInterface/transferRecordsRequest", output = "http://server/CenterServerInterface/transferRecordsResponse")
    public String transferRecords(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editRecord", targetNamespace = "http://server/", className = "client.USimport.EditRecord")
    @ResponseWrapper(localName = "editRecordResponse", targetNamespace = "http://server/", className = "client.USimport.EditRecordResponse")
    @Action(input = "http://server/CenterServerInterface/editRecordRequest", output = "http://server/CenterServerInterface/editRecordResponse")
    public String editRecord(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createERecord", targetNamespace = "http://server/", className = "client.USimport.CreateERecord")
    @ResponseWrapper(localName = "createERecordResponse", targetNamespace = "http://server/", className = "client.USimport.CreateERecordResponse")
    @Action(input = "http://server/CenterServerInterface/createERecordRequest", output = "http://server/CenterServerInterface/createERecordResponse")
    public String createERecord(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLocalCounts", targetNamespace = "http://server/", className = "client.USimport.GetLocalCounts")
    @ResponseWrapper(localName = "getLocalCountsResponse", targetNamespace = "http://server/", className = "client.USimport.GetLocalCountsResponse")
    @Action(input = "http://server/CenterServerInterface/getLocalCountsRequest", output = "http://server/CenterServerInterface/getLocalCountsResponse")
    public String getLocalCounts();

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @param arg6
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createMRecord", targetNamespace = "http://server/", className = "client.USimport.CreateMRecord")
    @ResponseWrapper(localName = "createMRecordResponse", targetNamespace = "http://server/", className = "client.USimport.CreateMRecordResponse")
    @Action(input = "http://server/CenterServerInterface/createMRecordRequest", output = "http://server/CenterServerInterface/createMRecordResponse")
    public String createMRecord(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        ProjectInfo arg5,
        @WebParam(name = "arg6", targetNamespace = "")
        String arg6);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchIfRecordExists", targetNamespace = "http://server/", className = "client.USimport.SearchIfRecordExists")
    @ResponseWrapper(localName = "searchIfRecordExistsResponse", targetNamespace = "http://server/", className = "client.USimport.SearchIfRecordExistsResponse")
    @Action(input = "http://server/CenterServerInterface/searchIfRecordExistsRequest", output = "http://server/CenterServerInterface/searchIfRecordExistsResponse")
    public boolean searchIfRecordExists(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
