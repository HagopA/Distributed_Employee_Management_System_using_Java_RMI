package server.centerServerInterfaceIDL;


/**
* server/centerServerInterfaceIDL/_CenterServerInterfaceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CenterServerInterfaceIDL.idl
* Friday, October 26, 2018 5:01:33 PM EDT
*/

public class _CenterServerInterfaceStub extends org.omg.CORBA.portable.ObjectImpl implements server.centerServerInterfaceIDL.CenterServerInterface
{

  public String createMRecord (String managerId, String firstName, String lastName, int empId, String mailId, server.centerServerInterfaceIDL.ProjectInfo project, String location)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("createMRecord", true);
                $out.write_string (managerId);
                $out.write_string (firstName);
                $out.write_string (lastName);
                $out.write_long (empId);
                $out.write_string (mailId);
                server.centerServerInterfaceIDL.ProjectInfoHelper.write ($out, project);
                $out.write_string (location);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return createMRecord (managerId, firstName, lastName, empId, mailId, project, location        );
            } finally {
                _releaseReply ($in);
            }
  } // createMRecord

  public String createERecord (String managerId, String firstName, String lastName, int empId, String mailId, String projectId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("createERecord", true);
                $out.write_string (managerId);
                $out.write_string (firstName);
                $out.write_string (lastName);
                $out.write_long (empId);
                $out.write_string (mailId);
                $out.write_string (projectId);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return createERecord (managerId, firstName, lastName, empId, mailId, projectId        );
            } finally {
                _releaseReply ($in);
            }
  } // createERecord

  public String getRecordCounts (String managerId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getRecordCounts", true);
                $out.write_string (managerId);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getRecordCounts (managerId        );
            } finally {
                _releaseReply ($in);
            }
  } // getRecordCounts

  public String editRecord (String managerId, String recordId, String fieldName, String newValue)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("editRecord", true);
                $out.write_string (managerId);
                $out.write_string (recordId);
                $out.write_string (fieldName);
                $out.write_string (newValue);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return editRecord (managerId, recordId, fieldName, newValue        );
            } finally {
                _releaseReply ($in);
            }
  } // editRecord

  public String transferRecords (String managerId, String recordId, String remoteCenterServerName)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("transferRecords", true);
                $out.write_string (managerId);
                $out.write_string (recordId);
                $out.write_string (remoteCenterServerName);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return transferRecords (managerId, recordId, remoteCenterServerName        );
            } finally {
                _releaseReply ($in);
            }
  } // transferRecords

  public String getLocalCounts ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getLocalCounts", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getLocalCounts (        );
            } finally {
                _releaseReply ($in);
            }
  } // getLocalCounts

  public boolean searchIfRecordExists (String recordId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("searchIfRecordExists", true);
                $out.write_string (recordId);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return searchIfRecordExists (recordId        );
            } finally {
                _releaseReply ($in);
            }
  } // searchIfRecordExists

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:server/centerServerInterfaceIDL/CenterServerInterface:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _CenterServerInterfaceStub
